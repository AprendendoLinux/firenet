# docker-compose.yml
services:
  web:
    build: .
    container_name: firenet-web
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - DB_HOST=db
      - DB_NAME=firenet
      - DB_USER=root
      - DB_PASSWORD=example
    depends_on:
      db:
        condition: service_healthy
    networks:
      - firenet-network

  db:
    image: mysql:latest
    container_name: firenet-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: firenet
    volumes:
      - /srv/db:/var/lib/mysql
    healthcheck:  # Adicionado: Verifica se o MySQL est√° pronto
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 20s
      retries: 10
      start_period: 30s  # Tempo inicial para o container "aquecer"
    networks:
      - firenet-network

  phpmyadmin:
    container_name: phpmyadmin
    hostname: phpmyadmin
    networks:
      - firenet-network
    image: phpmyadmin:latest
    restart: always
    environment:
      PMA_HOSTS: 'db'
    ports:
      - 8080:80

networks:
  firenet-network:
    driver: bridge
    name: firenet-network
